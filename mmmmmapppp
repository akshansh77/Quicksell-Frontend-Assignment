from presidio_analyzer import AnalyzerEngine
from presidio_anonymizer import AnonymizerEngine
from presidio_anonymizer.entities import OperatorConfig
from transformers import pipeline
import re

# Initialize Presidio and Grammar Corrector once (can be reused)
analyzer = AnalyzerEngine()
anonymizer = AnonymizerEngine()
grammar_corrector = pipeline("text2text-generation", model="vennify/t5-base-grammar-correction")

# Define custom PII replacement operators
operators = {
    "PERSON": OperatorConfig("replace", {"new_value": "XXX"}),
    "LOCATION": OperatorConfig("replace", {"new_value": "YYY"}),
    "DATE_TIME": OperatorConfig("replace", {"new_value": "ZZZ"}),
    "PHONE_NUMBER": OperatorConfig("replace", {"new_value": "000"}),
    "EMAIL_ADDRESS": OperatorConfig("replace", {"new_value": "email@example.com"})
}

def clean_transcript(transcript: str) -> str:
    """
    Takes a call transcript, masks PII, removes timestamps/overlap markers,
    and performs grammar correction to return a clean transcript.
    """
    # Step 1: PII detection and masking
    results = analyzer.analyze(text=transcript, language='en')
    masked_text = anonymizer.anonymize(
        text=transcript, analyzer_results=results, operators=operators
    ).text

    # Step 2: Remove timestamps and overlap markers
    clean_text = re.sub(r"\[.*?\]", "", masked_text)  # remove brackets
    clean_text = re.sub(r"\s+Overlap Found", "", clean_text)  # remove overlap notes
    clean_text = re.sub(r"\s+", " ", clean_text).strip()  # normalize whitespace

    # Step 3: Chunk text for grammar correction (avoid truncation)
    chunk_size = 400
    chunks = [clean_text[i:i+chunk_size] for i in range(0, len(clean_text), chunk_size)]
    corrected_chunks = [
        grammar_corrector(chunk, max_length=512)[0]['generated_text'] for chunk in chunks
    ]

    # Merge chunks into final cleaned transcript
    final_transcript = " ".join(corrected_chunks)
    return final_transcript

# Example usage:
if __name__ == "__main__":
    text = """[00:00:01.00 --> 00:00:07.00][Agent_1] Thank you for calling CheapOair. You're speaking with Anton. All the prices quoted on the call will be total price per passenger. How can I help you?
    [00:00:09.00 --> 00:00:18.00][Customer] Hi, I have an issue with my booking. Umm, you haven't charged my card yet, but I paid for it yesterday, and I keep getting emails that say that you need me to contact you."""
    
    clean_text = clean_transcript(text)
    print("Final Clean Transcript:\n", clean_text)
